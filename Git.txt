sudo apt-add-repository ppa:git-core/ppa
sudo apt update
sudo apt install git
4bbd94270db50c57f3c731a5c8ed8e219d30c419

Git global setup
	git config --global user.name "drafterleo"
	git config --global user.email "drafterleo@gmail.com"

git config --global core.editor "nano"

Aliases
	git config --global alias.co checkout
	git config --global alias.ci commit
	git config --global alias.st status
	git config --global alias.br branch
	git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"
	git config --global alias.type 'cat-file -t'
	git config --global alias.dump 'cat-file -p'

Existing folder
	cd existing_folder
	git init
	git remote add origin https://gitlab.com/Drafterleo/PROFOMS.git
	git add .
	git commit
	git push -u origin master


Existing Git repository
	cd existing_repo
	git remote add origin https://gitlab.com/Drafterleo/PROFOMS.git
	git push -u origin --all
	git push -u origin --tags

git add .
git status
git commit [-a] -m "Commit message" 

git branch <branch_name>
git checkout <branch_name>

git checkout master
git merge [-s resolve] <branch_name>

git push origin <branch>
git push origin <branch> --force

git pull origin <branch>

git merge [-s resolve] origin/master


git remote update  
git pull --all

### http://stackoverflow.com/questions/4114095/how-to-revert-git-repository-to-a-previous-commit

Temporarily switch to a different commit:
	git checkout 0d1d7fc32

Hard delete unpublished commits:
	# This will destroy any local modifications.
	# Don't do it if you have uncommitted work you want to keep.
	git reset --hard 0d1d7fc32

	# This saves the modifications, then reapplies that patch after resetting.
	# You could get merge conflicts, if you've modified things which were
	# changed since the commit you reset to.
	git stash
	git reset --hard 0d1d7fc32
	git stash pop


Autosave passwords
	## Windows
	git config credential.helper store
	##Linux
	git config --global credential.helper cache


SSH key generation
	ssh-keygen -t rsa -b 4096 -C "drafterleo@gmail.com"
	eval $(ssh-agent -s)
	ssh-add ~/.ssh/id_rsa

    ssh-keyscan -t rsa github.com > ~/.ssh/known_hosts
	
    ~/.ssh/id_rsa.pub добавить в GitHub

	на Windows

	ssh-keygen
	/.ssh/id_rsa скопировать в C:\Program Files\Git\.ssh


Push pull default
	git config --global push.default current
	git config --global pull.default current
	git branch --set-upstream-to=origin/<branch> <branch>

Tags
	git tag -a <tagname> -m '<message>'
	git push --follow-tags
	git config --global push.followTags true

Git branch in bash prompt ~/.bashrc

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\W\[\033[33m\]$(parse_git_branch)\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

PS1=$PS1'\[\e]2;\W\a\]' # set terminal title to cwd


	
